{
  "version": 3,
  "sources": ["../node_modules/gl-matrix/cjs/common.js", "../node_modules/gl-matrix/cjs/mat2.js", "../node_modules/gl-matrix/cjs/mat2d.js", "../node_modules/gl-matrix/cjs/mat3.js", "../node_modules/gl-matrix/cjs/mat4.js", "../node_modules/gl-matrix/cjs/vec3.js", "../node_modules/gl-matrix/cjs/vec4.js", "../node_modules/gl-matrix/cjs/quat.js", "../node_modules/gl-matrix/cjs/quat2.js", "../node_modules/gl-matrix/cjs/vec2.js", "../node_modules/gl-matrix/cjs/index.js", "../src/index.ts", "../node_modules/zogra-renderer/src/types/utils.ts", "../node_modules/zogra-renderer/src/types/vec3.ts", "../node_modules/zogra-renderer/src/types/vec4.ts", "../node_modules/zogra-renderer/src/types/vec2.ts", "../node_modules/zogra-renderer/src/types/color.ts", "../node_modules/zogra-renderer/src/types/mat4.ts", "../node_modules/zogra-renderer/src/types/quat.ts", "../node_modules/zogra-renderer/src/types/math.ts", "../node_modules/zogra-renderer/src/types/rect.ts", "../node_modules/reflect-metadata/Reflect.js", "../node_modules/zogra-renderer/src/utils/util.ts", "../node_modules/zogra-renderer/src/core/debug.ts", "../node_modules/zogra-renderer/src/core/global.ts", "../node_modules/zogra-renderer/src/builtin-assets/generated/index.js", "../node_modules/zogra-renderer/src/builtin-assets/shaders.ts", "../node_modules/zogra-renderer/src/core/event.ts", "../node_modules/zogra-renderer/src/core/asset.ts", "../node_modules/zogra-renderer/src/core/array-buffer.ts", "../node_modules/zogra-renderer/src/core/mesh.ts", "../node_modules/zogra-renderer/src/core/shader.ts", "../node_modules/zogra-renderer/src/core/texture-format.ts", "../node_modules/zogra-renderer/src/utils/image-sizing.ts", "../node_modules/zogra-renderer/src/core/frame-buffer.ts", "../node_modules/zogra-renderer/src/core/texture.ts", "../node_modules/zogra-renderer/src/core/material.ts", "../node_modules/zogra-renderer/src/builtin-assets/materials.ts", "../node_modules/zogra-renderer/src/builtin-assets/textures.ts", "../node_modules/zogra-renderer/src/utils/mesh-builder.ts", "../node_modules/zogra-renderer/src/builtin-assets/mesh.ts", "../node_modules/zogra-renderer/src/builtin-assets/assets.ts", "../node_modules/zogra-renderer/src/utils/object-pool.ts", "../node_modules/zogra-renderer/src/core/renderer.ts", "../node_modules/zogra-renderer/src/core/render-buffer.ts", "../node_modules/zogra-renderer/src/plugins/assets-importer/assets-importer.ts", "../node_modules/zogra-renderer/src/plugins/texture-importer/texture-importer.ts", "../node_modules/zogra-renderer/src/utils/public-utils.ts", "../src/blur.ts", "../src/random.ts", "../src/renderer.ts", "../src/utils.ts", "../src/raindrop.ts", "../src/spawner.ts", "../src/simulator.ts"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\n\nfunction str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\n\nvar mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\n\nfunction str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\n\nvar mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\n\nvar mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspectiveNO = perspectiveNO;\nexports.perspectiveZO = perspectiveZO;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.orthoNO = orthoNO;\nexports.orthoZO = orthoZO;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = exports.ortho = exports.perspective = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexports.perspective = perspective;\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexports.ortho = ortho;\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\n\nvar mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\n\nvar sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexports.div = div;\nvar dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\n\nvar sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexports.div = div;\nvar dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\n\nvar clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexports.length = length;\nvar len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\n\nvar getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\n\nvar setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\n\nvar mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\n\nvar dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\n\nvar length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexports.length = length;\nvar len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\n\nfunction str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexports.div = div;\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }", "import { Rect, TextureData, vec2 } from \"zogra-renderer\";\r\nimport { RaindropRenderer, RenderOptions } from \"./renderer\";\r\nimport { RaindropSimulator, SimulatorOptions } from \"./simulator\";\r\nimport { Time } from \"./utils\";\r\n\r\ninterface Options extends SimulatorOptions, RenderOptions\r\n{\r\n}\r\n\r\nclass RaindropFX\r\n{\r\n    public options: Options;\r\n    public renderer: RaindropRenderer;\r\n    public simulator: RaindropSimulator;\r\n\r\n    private animHandle = 0;\r\n\r\n    constructor(options: Partial<Options> & {canvas: HTMLCanvasElement})\r\n    {\r\n        const canvas = options.canvas;\r\n        const defaultOptions: Options = {\r\n            // Simulator options\r\n            spawnInterval: [0.1, 0.1],\r\n            spawnSize: [60, 100],\r\n            spawnLimit: 2000,\r\n            viewport: new Rect(vec2.zero(), vec2(canvas.width, canvas.height)),\r\n            canvas: canvas,\r\n            width: canvas.width,\r\n            height: canvas.height,\r\n            background: \"\",\r\n            gravity: 2400,\r\n            slipRate: 0,\r\n            motionInterval: [0.1, 0.4],\r\n            colliderSize: 1,\r\n            trailDropDensity: 0.2,\r\n            trailDistance: [20, 30],\r\n            trailDropSize: [0.3, 0.5],\r\n            trailSpread: 0.6,\r\n            initialSpread: 0.5,\r\n            shrinkRate: 0.01,\r\n            velocitySpread: 0.3,\r\n            evaporate: 10,\r\n            xShifting: [0, 0.1],\r\n\r\n            // Rendering options\r\n            backgroundBlurSteps: 3,\r\n            mist: true,\r\n            mistColor: [0.01, 0.01, 0.01, 1],\r\n            mistBlurStep: 4,\r\n            mistTime: 10,\r\n            dropletsPerSeconds: 500,\r\n            dropletSize: [10, 30],\r\n            smoothRaindrop: [0.96, 0.99],\r\n            refractBase: 0.4,\r\n            refractScale: 0.6,\r\n            raindropCompose: \"smoother\",\r\n            raindropLightPos: [-1, 1, 2, 0],\r\n            raindropDiffuseLight: [0.2, 0.2, 0.2],\r\n            raindropShadowOffset: 0.8,\r\n            raindropEraserSize: [0.93, 1.0],\r\n            raindropSpecularLight: [0, 0, 0],\r\n            raindropSpecularShininess: 256,\r\n            raindropLightBump: 1,\r\n        };\r\n        this.options = { ...defaultOptions, ...options };\r\n\r\n        this.simulator = new RaindropSimulator(this.options);\r\n        this.renderer = new RaindropRenderer(this.options);\r\n    }\r\n    \r\n    async start()\r\n    {\r\n        await this.renderer.loadAssets();\r\n\r\n        let lastFrameTime = 0;\r\n        const update = (delay: number) =>\r\n        {\r\n            const dt = (delay - lastFrameTime) / 1000;\r\n            lastFrameTime = delay;\r\n            const time = <Time>{\r\n                dt: 0.03,\r\n                total: delay / 1000\r\n            };\r\n\r\n            this.update(time);\r\n\r\n            this.animHandle = requestAnimationFrame(update);\r\n        };\r\n\r\n        this.animHandle =  requestAnimationFrame(update);\r\n    }\r\n    \r\n    stop()\r\n    {\r\n        cancelAnimationFrame(this.animHandle);\r\n    }\r\n\r\n    resize(width: number, height: number)\r\n    {\r\n        this.options.width = width;\r\n        this.options.height = height;\r\n        this.options.viewport = new Rect(vec2.zero(), vec2(width, height));\r\n        this.renderer.resize();\r\n    }\r\n\r\n    async setBackground(background: string | TextureData)\r\n    {\r\n        this.renderer.options.background = background;\r\n        await this.renderer.reloadBackground();\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        this.stop();\r\n        this.renderer.renderer.destroy();\r\n    }\r\n    \r\n    private update(time: Time)\r\n    {\r\n        this.simulator.update(time);\r\n\r\n        this.renderer.render(this.simulator.raindrops, time);\r\n    }\r\n\r\n}\r\n\r\nexport default RaindropFX;", null, null, null, null, null, null, null, null, null, "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import { div, FilterMode, MaterialFromShader, mul, RenderTexture, Shader, shaderProp, Texture, Texture2D, TextureResizing, vec2, vec4, WrapMode, ZograRenderer, TextureFormat } from \"zogra-renderer\";\r\nimport vert from \"./shader/2d-vert.glsl\";\r\nimport frag from \"./shader/blur.glsl\";\r\n\r\nclass MaterialBlur extends MaterialFromShader(new Shader(vert, frag))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    texture: Texture | null = null;\r\n\r\n    @shaderProp(\"uTexSize\", \"vec4\")\r\n    textureSize: vec4 = vec4.one();\r\n\r\n    @shaderProp(\"uSampleOffset\", \"float\")\r\n    sampleOffset: number = 1;\r\n}\r\n\r\nexport class BlurRenderer\r\n{\r\n    renderer: ZograRenderer;\r\n    steps: RenderTexture[] = [];\r\n    mateiralBlur = new MaterialBlur();\r\n\r\n    constructor(renderer: ZograRenderer)\r\n    {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    init(texture: Texture)\r\n    {\r\n        if (!this.steps[0])\r\n        {\r\n            this.steps[0] = new RenderTexture(texture.width, texture.height, false, texture.format, texture.filterMode);\r\n            this.steps[0].wrapMode = WrapMode.Clamp;\r\n            this.steps[0].updateParameters();\r\n        }\r\n        if (this.steps[0].width !== texture.width || this.steps[0].height !== texture.height)\r\n            this.steps[0].resize(texture.width, texture.height, TextureResizing.Discard);\r\n    }\r\n\r\n    blur(texture: Texture, iteration: number = 4, output = this.steps[0])\r\n    {\r\n        if (!this.steps[0])\r\n            this.steps[0] = new RenderTexture(texture.width, texture.height, false, texture.format, texture.filterMode);   \r\n        output = output || this.steps[0];\r\n\r\n        if (this.steps[0].width !== texture.width || this.steps[0].height !== texture.height)\r\n            this.steps[0].resize(texture.width, texture.height, TextureResizing.Discard);\r\n        \r\n        this.downSample(texture, iteration);\r\n\r\n        return this.upSample(iteration, output);\r\n    }\r\n\r\n    downSample(input: Texture, iteration: number)\r\n    {\r\n        for (let i = 1; i <= iteration; i++)\r\n        {\r\n            const downSize = vec2.floor(div(input.size, vec2(2)));\r\n            if (!this.steps[i])\r\n            {\r\n                this.steps[i] = new RenderTexture(downSize.x, downSize.y, false, TextureFormat.RGBA, FilterMode.Linear);\r\n                this.steps[i].wrapMode = WrapMode.Clamp;\r\n                this.steps[i].updateParameters();\r\n            }\r\n\r\n            const output = this.steps[i];\r\n            if (output.width !== downSize.x || output.height !== downSize.y)\r\n                output.resize(downSize.x, downSize.y, TextureResizing.Discard);\r\n\r\n            this.mateiralBlur.texture = input;\r\n            this.mateiralBlur.textureSize = vec4(input.width, input.height, 1 / input.width, 1 / input.height);\r\n            this.mateiralBlur.sampleOffset = 1;\r\n            this.renderer.blit(input, output, this.mateiralBlur);\r\n            input = output;\r\n        }\r\n    }\r\n\r\n    upSample(iteration: number, finalOutput = this.steps[0])\r\n    {\r\n        let input = this.steps[iteration];\r\n        for (let i = iteration - 1; i >= 0; i--)\r\n        {\r\n            const upSize = mul(input.size, vec2(2));\r\n            if (!this.steps[i])\r\n            {\r\n                this.steps[i] = new RenderTexture(upSize.x, upSize.y, false, TextureFormat.RGBA, FilterMode.Linear);\r\n                this.steps[i].wrapMode = WrapMode.Clamp;\r\n                this.steps[i].updateParameters();\r\n            }\r\n\r\n            const output = i === 0 ? finalOutput : this.steps[i];\r\n\r\n            this.mateiralBlur.texture = input;\r\n            this.mateiralBlur.textureSize = vec4(input.width, input.height, 1 / input.width, 1 / input.height);\r\n            this.mateiralBlur.sampleOffset = 1;\r\n            this.renderer.blit(input, output, this.mateiralBlur);\r\n            input = output;\r\n        }\r\n        return input;\r\n    }\r\n}", "import { distance, mul, Rect, vec2, vec3, Vector2 } from \"zogra-renderer\";\r\n\r\nexport interface JitterOption<T extends number | vec2 | [number, number]>\r\n{\r\n    base: T;\r\n    jitter: T;\r\n}\r\n\r\nexport function randomJittered<T extends number | vec2>(option: JitterOption<T>): T\r\n{\r\n    if (typeof (option.base) === \"number\")\r\n        return option.base + (option.jitter as number) * (Math.random() * 2 - 1) as T;\r\n    else\r\n    {\r\n        let opt = option as JitterOption<[number, number]>;\r\n        return vec2(\r\n            opt.base[0] + (opt.jitter[0]) * (Math.random() * 2 - 1),\r\n            opt.base[1] + (opt.jitter[1]) * (Math.random() * 2 - 1)\r\n        ) as T;\r\n    }\r\n}\r\nexport function randomInRect(rect: Rect): vec2\r\n{\r\n    return vec2(Math.random(), Math.random()).mul(rect.size).plus(rect.min);\r\n}\r\n\r\n// https://www.shadertoy.com/view/ltB3zD\r\nconst PHI = 1.61803398874989484820459; // \u03A6 = Golden Ratio \r\nfunction fract(x: number)\r\n{\r\n    return x - Math.floor(x);\r\n}\r\n/**\r\n * Generate noise in [-1, 1]\r\n * @param xy Should be non zero integer\r\n * @param seed Non zero integer\r\n */\r\nexport function goldNoise(xy: vec2, seed: number)\r\n{\r\n    return fract(Math.tan(distance(mul(xy, vec2(PHI)), xy) * seed) * xy.x);\r\n}\r\n\r\nexport function tentNoise(t: number, seed: number)\r\n{\r\n    let frac = fract(t);\r\n    let grid = Math.floor(t += seed);\r\n}\r\n\r\n/**\r\n * Get random value in (-1, 1)\r\n */\r\nexport function random()\r\n{\r\n    return Math.random() * 2 - 1;\r\n}\r\n\r\nexport function randomRange(min: number, max: number)\r\n{\r\n    return Math.random() * (max - min) + min;\r\n}", "import\r\n{\r\n    Blending, Color, DepthTest, mat4, MaterialFromShader, MeshBuilder, quat, RenderBuffer,\r\n    GLArrayBuffer, RenderTexture, Shader, shaderProp, SimpleTexturedMaterial, Texture, Texture2D, TextureData,\r\n    TextureFormat, TextureImporter, Utils, vec2, vec4, WrapMode, ZograRenderer, FrameBuffer, BufferStructure, DefaultVertexData, Mesh\r\n} from \"zogra-renderer\";\r\nimport raindropTexture from \"../assets/img/raindrop.png\";\r\nimport { BlurRenderer } from \"./blur\";\r\nimport { RainDrop } from \"./raindrop\";\r\nimport { randomRange } from \"./random\";\r\nimport defaultFrag from \"./shader/2d-frag.glsl\";\r\nimport defaultVert from \"./shader/2d-vert.glsl\";\r\nimport mistBackground from \"./shader/bg-mist.glsl\";\r\nimport composeFrag from \"./shader/compose.glsl\";\r\nimport dropletVert from \"./shader/droplet-vert.glsl\";\r\nimport dropletFrag from \"./shader/droplet.glsl\";\r\nimport raindropErase from \"./shader/erase.glsl\";\r\nimport raindropFrag from \"./shader/raindrop-frag.glsl\";\r\nimport raindropVert from \"./shader/raindrop-vert.glsl\";\r\nimport { Time } from \"./utils\";\r\n\r\n\r\nconst RaindropInstanceStruct = BufferStructure({\r\n    size: \"float\",\r\n    modelMatrix: \"mat4\"\r\n});\r\n\r\nclass RaindropMaterial extends MaterialFromShader(new Shader(raindropVert, raindropFrag, {\r\n    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor],\r\n    depth: DepthTest.Disable,\r\n    zWrite: false,\r\n    attributes: {\r\n        size: \"aSize\",\r\n        modelMatrix: \"aModelMatrix\",\r\n    }\r\n}))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    texture: Texture | null = null;\r\n\r\n    @shaderProp(\"uSize\", \"float\")\r\n    size: number = 0;\r\n}\r\n\r\nclass DropletMaterial extends MaterialFromShader(new Shader(dropletVert, dropletFrag, {\r\n    vertexStructure: DefaultVertexData,\r\n    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor],\r\n    depth: DepthTest.Disable,\r\n    zWrite: false,\r\n    attributes: {\r\n        size: \"aSize\",\r\n        modelMatrix: \"aModelMatrix\",\r\n    }\r\n}))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    texture: Texture | null = null;\r\n\r\n    @shaderProp(\"uSpawnRect\", \"vec4\")\r\n    spawnRect: vec4 = vec4(0, 0, 1, 1);\r\n\r\n    @shaderProp(\"uSizeRange\", \"vec2\")\r\n    sizeRange: vec2 = vec2(10, 20);\r\n\r\n    @shaderProp(\"uSeed\", \"float\")\r\n    seed: number = 1;\r\n}\r\n\r\nclass FinalCompose extends MaterialFromShader(new Shader(defaultVert, composeFrag, {\r\n    blend: [Blending.SrcAlpha, Blending.OneMinusSrcAlpha],\r\n    depth: DepthTest.Disable,\r\n    zWrite: false\r\n}))\r\n{\r\n    @shaderProp(\"uMainTex\", \"tex2d\")\r\n    background: Texture | null = null;\r\n\r\n    @shaderProp(\"uBackgroundSize\", \"vec4\")\r\n    backgroundSize: vec4 = vec4.one();\r\n\r\n    @shaderProp(\"uRaindropTex\", \"tex2d\")\r\n    raindropTex: Texture | null = null;\r\n\r\n    @shaderProp(\"uDropletTex\", \"tex2d\")\r\n    dropletTex: Texture | null = null;\r\n\r\n    @shaderProp(\"uMistTex\", \"tex2d\")\r\n    mistTex: Texture | null = null;\r\n\r\n    @shaderProp(\"uSmoothRaindrop\", \"vec2\")\r\n    smoothRaindrop: vec2 = vec2(0.95, 1.0);\r\n\r\n    @shaderProp(\"uRefractParams\", \"vec2\")\r\n    refractParams: vec2 = vec2(0.4, 0.6);\r\n\r\n    @shaderProp(\"uLightPos\", \"vec4\")\r\n    lightPos: vec4 = vec4(.5, .5, 2, 1);\r\n\r\n    @shaderProp(\"uDiffuseColor\", \"color\")\r\n    diffuseLight: Color = new Color(0.3, 0.3, 0.3, 0.8);\r\n\r\n    @shaderProp(\"uSpecularParams\", \"vec4\")\r\n    specularParams: vec4 = vec4(1, 1, 1, 32);\r\n\r\n    @shaderProp(\"uBump\", \"float\")\r\n    bump: number = 1;\r\n}\r\n\r\nclass RaindropErase extends SimpleTexturedMaterial(new Shader(defaultVert, raindropErase, {\r\n    // blend: [Blending.Zero, Blending.OneMinusSrcAlpha],\r\n    blendRGB: [Blending.Zero, Blending.OneMinusSrcAlpha],\r\n    blendAlpha: [Blending.Zero, Blending.OneMinusSrcAlpha],\r\n}))\r\n{\r\n    @shaderProp(\"uEraserSmooth\", \"vec2\")\r\n    eraserSize: vec2 = vec2(0.93, 1.0);\r\n}\r\n\r\nconst MistAccumulate = SimpleTexturedMaterial(new Shader(defaultVert, defaultFrag, {\r\n    blend: [Blending.One, Blending.One]\r\n}));\r\n\r\nclass MistBackgroundCompose extends SimpleTexturedMaterial(new Shader(defaultVert, mistBackground, {\r\n    blend: [Blending.SrcAlpha, Blending.OneMinusSrcAlpha]\r\n}))\r\n{\r\n    @shaderProp(\"uMistColor\", \"color\")\r\n    mistColor: Color = new Color(0.01, 0.01, 0.01, 1);\r\n\r\n    @shaderProp(\"uMistTex\", \"tex2d\")\r\n    mistTex: Texture | null = null;\r\n}\r\n\r\n\r\nexport interface RenderOptions\r\n{\r\n    canvas: HTMLCanvasElement;\r\n    width: number;\r\n    height: number;\r\n    background: TextureData | string;\r\n    /**\r\n     * Background blur steps used for background & raindrop refract image.\r\n     * Value should be integer from 0 to log2(backgroundSize).\r\n     * Recommend 3 or 4\r\n     */\r\n    backgroundBlurSteps: number;\r\n    /**\r\n     * Enable blurry mist effect\r\n     */\r\n    mist: boolean;\r\n    /**\r\n     * [r, g, b, a] mist color, each component in range (0..1). \r\n     * The alpha is used for whole mist layer.\r\n     * Recommend [0.01, 0.01, 0.01, 1]\r\n     */\r\n    mistColor: [number, number, number, number];\r\n    /**\r\n     * Describe how long takes mist alpha from 0 to 1\r\n     */\r\n    mistTime: number;\r\n    /**\r\n     * Background blur steps used for mist.\r\n     * Value should be integer from 0 to log2(backgroundSize).\r\n     * Recommended value = backgroundBlurSteps + 1\r\n     */\r\n    mistBlurStep: number;\r\n    /**\r\n     * Tiny droplet spawn rate.\r\n     */\r\n    dropletsPerSeconds: number;\r\n    /**\r\n     * Random size range of tiny drplets.\r\n     * Recommend [10, 30]\r\n     */\r\n    dropletSize: [number, number];\r\n    /**\r\n     * Smooth range [a, b] of raindrop edge.\r\n     * Recommend [0.96, 1.0]\r\n     * \r\n     * Larger range of (b - a) have smoother edge.\r\n     * \r\n     * Lower value b makes raindrop larger with a distort edge\r\n     */\r\n    smoothRaindrop: [number, number];\r\n    /**\r\n     * Refract uv scale of minimal raindrop.\r\n     * Recommend in range (0.2, 0.6)\r\n     */\r\n    refractBase: number,\r\n    /**\r\n     * Refract uv scaled by raindrop size.\r\n     * Rocommend in range (0.4, 0.8)\r\n     */\r\n    refractScale: number,\r\n    /**\r\n     * Describe how raindrops are composed.\r\n     * \r\n     * - `smoother` compose raindrops normal with 'exclusion' blend mode\r\n     * \r\n     * - `harder` compose raindrops normal with 'normal' blend mode\r\n     */\r\n    raindropCompose: \"smoother\" | \"harder\"\r\n    /**\r\n     * Screen space (0..1) light direction or position.\r\n     * Recommend [-1, 1, 2, 0]\r\n     * \r\n     * - Use [x, y, z, 0] to indicate a direction\r\n     * \r\n     * - Use [x, y, z, 1] to indicate a position\r\n     */\r\n    raindropLightPos: [number, number, number, number];\r\n    /**\r\n     * Lambertian diffuse lighting Color.\r\n     * Recommend [0.3, 0.3, 0.3]\r\n     */\r\n    raindropDiffuseLight: [number, number, number];\r\n    /**\r\n     * Higher value makes more shadow.\r\n     * Recommend in range (0.6..0.8)\r\n     */\r\n    raindropShadowOffset: number;\r\n    /**\r\n     * Similar to `smoothRaindrop`. Used to erase droplets & mist.\r\n     * Recommended value [0.93, 1.0]\r\n     */\r\n    raindropEraserSize: [number, number];\r\n    /**\r\n     * Specular light clor.\r\n     * Recommend disable it with [0, 0, 0] :)\r\n     */\r\n    raindropSpecularLight: [number, number, number];\r\n    /**\r\n     * Blinn-Phong exponent representing shininess.\r\n     * Value from 0 to 1024 is ok\r\n     */\r\n    raindropSpecularShininess: number;\r\n    /**\r\n     * Will apply to calculate screen space normal for lighting.\r\n     * Larger value makes raindrops looks more flat.\r\n     * Recommend in range (0.3..1)\r\n     */\r\n    raindropLightBump: number,\r\n\r\n}\r\n\r\nexport class RaindropRenderer\r\n{\r\n    renderer: ZograRenderer;\r\n    options: RenderOptions;\r\n\r\n    private raindropTex: Texture2D = null as any;\r\n    private originalBackground: Texture2D = null as any;\r\n    private background: RenderTexture;\r\n    private raindropComposeTex: RenderTexture;\r\n    private dropletTexture: RenderTexture;\r\n    private mistTexture: RenderTexture;\r\n    private blurryBackground: RenderTexture;\r\n    private mistBackground: RenderTexture;\r\n    private blurRenderer: BlurRenderer;\r\n\r\n    private matrlCompose = new FinalCompose();\r\n    private matrlRaindrop = new RaindropMaterial();\r\n    private matrlDroplet = new DropletMaterial();\r\n    private matrlErase = new RaindropErase();\r\n    private matrlMist = new MistAccumulate();\r\n    private matrlMistCompose = new MistBackgroundCompose();\r\n\r\n    private projectionMatrix: mat4;\r\n    private mesh: Mesh;\r\n\r\n    private raindropBuffer = new GLArrayBuffer(RaindropInstanceStruct, 3000);\r\n\r\n    // deubg: DebugLayerRenderer = new DebugLayerRenderer();\r\n\r\n    constructor(options: RenderOptions)\r\n    {\r\n        this.renderer = new ZograRenderer(options.canvas);\r\n        this.renderer.gl.getExtension(\"EXT_color_buffer_float\");\r\n        this.options = options;\r\n\r\n        this.projectionMatrix = mat4.ortho(0, options.width, 0, options.height, 1, -1);\r\n        this.raindropComposeTex = new RenderTexture(options.width, options.height, false);\r\n        this.background = new RenderTexture(options.width, options.height, false);\r\n        this.dropletTexture = new RenderTexture(options.width, options.height, false);\r\n        this.blurryBackground = new RenderTexture(options.width, options.height, false);\r\n        this.mistBackground = new RenderTexture(options.width, options.height, false);\r\n        this.mistTexture = new RenderTexture(options.width, options.height, false, TextureFormat.R16F);\r\n\r\n        this.blurRenderer = new BlurRenderer(this.renderer);\r\n        this.mesh = MeshBuilder.quad();\r\n\r\n        this.renderer.setViewProjection(mat4.identity(), this.projectionMatrix);\r\n    }\r\n    async loadAssets()\r\n    {\r\n        // this.renderer.blit(null, RenderTarget.CanvasTarget);\r\n        this.raindropTex = await TextureImporter\r\n            .buffer(raindropTexture)\r\n            .then(t=>t.tex2d());\r\n\r\n        this.matrlRaindrop.texture = this.raindropTex;\r\n        this.matrlDroplet.texture = this.raindropTex;\r\n\r\n        await this.reloadBackground();\r\n\r\n    }\r\n    async reloadBackground()\r\n    {\r\n        this.originalBackground?.destroy();\r\n        if (typeof (this.options.background) === \"string\")\r\n        {\r\n            this.originalBackground = await TextureImporter\r\n                .url(this.options.background)\r\n                .then(t => t.tex2d({ wrapMpde: WrapMode.Clamp }));\r\n\r\n            this.originalBackground.wrapMode = WrapMode.Clamp;\r\n            this.originalBackground.updateParameters();\r\n        }\r\n        else\r\n        {\r\n            this.originalBackground = new Texture2D();\r\n            this.originalBackground.setData(this.options.background);\r\n            this.originalBackground.updateParameters();\r\n        }\r\n        const [srcRect, dstRect] = Utils.imageResize(this.originalBackground.size, this.background.size, Utils.ImageSizing.Cover);\r\n        this.renderer.blit(this.originalBackground, this.background, this.renderer.assets.materials.blitCopy, srcRect, dstRect);\r\n        this.background.generateMipmap();\r\n\r\n        this.blurBackground();\r\n    }\r\n    resize()\r\n    {\r\n        this.renderer.setSize(this.options.width, this.options.height);\r\n        this.projectionMatrix = mat4.ortho(0, this.options.width, 0, this.options.height, 1, -1);\r\n        this.renderer.setViewProjection(mat4.identity(), this.projectionMatrix);\r\n\r\n        this.raindropComposeTex.resize(this.options.width, this.options.height);\r\n        this.background.resize(this.options.width, this.options.height);\r\n        this.dropletTexture.resize(this.options.width, this.options.height);\r\n        this.blurryBackground.resize(this.options.width, this.options.height);\r\n        this.mistBackground.resize(this.options.width, this.options.height);\r\n        this.mistTexture.resize(this.options.width, this.options.height);\r\n\r\n        const [srcRect, dstRect] = Utils.imageResize(this.originalBackground.size, this.background.size, Utils.ImageSizing.Cover);\r\n        this.renderer.blit(this.originalBackground, this.background, this.renderer.assets.materials.blitCopy, srcRect, dstRect);\r\n        this.background.generateMipmap();\r\n\r\n        this.blurBackground();\r\n    }\r\n    render(raindrops: RainDrop[], time: Time)\r\n    {\r\n        this.drawDroplet(time);\r\n        this.drawMist(time.dt);\r\n        this.drawRaindrops(raindrops);\r\n\r\n        this.renderer.setFramebuffer(FrameBuffer.CanvasBuffer);\r\n        this.renderer.clear(Color.black);\r\n\r\n        this.drawBackground();\r\n\r\n        this.matrlCompose.background = this.blurryBackground;\r\n        this.matrlCompose.backgroundSize = vec4(this.options.width, this.options.height, 1 / this.options.width, 1 / this.options.height);\r\n        this.matrlCompose.raindropTex = this.raindropComposeTex;\r\n        this.matrlCompose.dropletTex = this.dropletTexture;\r\n        this.matrlCompose.mistTex = this.mistTexture;\r\n        this.matrlCompose.smoothRaindrop = vec2(...this.options.smoothRaindrop);\r\n        this.matrlCompose.refractParams = vec2(this.options.refractBase, this.options.refractScale);\r\n        this.matrlCompose.lightPos = vec4(...this.options.raindropLightPos);\r\n        this.matrlCompose.diffuseLight = new Color(...this.options.raindropDiffuseLight, this.options.raindropShadowOffset);\r\n        this.matrlCompose.specularParams = vec4(...this.options.raindropSpecularLight, this.options.raindropSpecularShininess);\r\n        this.matrlCompose.bump = this.options.raindropLightBump;\r\n\r\n        this.renderer.blit(null, FrameBuffer.CanvasBuffer, this.matrlCompose);\r\n    }\r\n\r\n    private blurBackground()\r\n    {\r\n        // Blur background with N steps downsample + N steps upsample\r\n        if (!this.options.mist)\r\n        {\r\n            this.blurRenderer.blur(this.background, this.options.backgroundBlurSteps, this.blurryBackground);\r\n        }\r\n        else\r\n        {\r\n            // Downsample to max steps\r\n            // Then upsample from a larger texture before smaller texture to avoid override\r\n            this.blurRenderer.init(this.background);\r\n            this.blurRenderer.downSample(this.background, Math.max(this.options.backgroundBlurSteps, this.options.mistBlurStep));\r\n\r\n            if (this.options.backgroundBlurSteps === this.options.mistBlurStep)\r\n            {\r\n                this.blurRenderer.upSample(this.options.backgroundBlurSteps, this.blurryBackground);\r\n                this.renderer.blit(this.blurryBackground, this.mistBackground);\r\n            }\r\n            else if (this.options.mistBlurStep > this.options.backgroundBlurSteps)\r\n            {\r\n                this.blurRenderer.upSample(this.options.backgroundBlurSteps, this.blurryBackground);\r\n                this.blurRenderer.upSample(this.options.mistBlurStep, this.mistBackground);\r\n            }\r\n            else\r\n            {\r\n                this.blurRenderer.upSample(this.options.mistBlurStep, this.mistBackground);\r\n                this.blurRenderer.upSample(this.options.backgroundBlurSteps, this.blurryBackground);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawMist(dt: number)\r\n    {\r\n        if (!this.options.mist)\r\n            return;\r\n        this.matrlMist.color.r = dt / this.options.mistTime;\r\n        this.renderer.blit(this.renderer.assets.textures.default, this.mistTexture, this.matrlMist);\r\n    }\r\n\r\n    private drawBackground()\r\n    {\r\n        this.renderer.blit(this.blurryBackground, FrameBuffer.CanvasBuffer);\r\n\r\n        if (this.options.mist)\r\n        {\r\n            this.matrlMistCompose.mistTex = this.mistTexture;\r\n            this.matrlMistCompose.texture = this.mistBackground;\r\n            this.matrlMistCompose.mistColor = new Color(...this.options.mistColor);\r\n            this.renderer.blit(this.mistBackground, FrameBuffer.CanvasBuffer, this.matrlMistCompose);\r\n        }\r\n\r\n    }\r\n\r\n    private drawRaindrops(raindrops: RainDrop[])\r\n    {\r\n        if (raindrops.length > this.raindropBuffer.length)\r\n            this.raindropBuffer.resize(this.raindropBuffer.length * 2);\r\n        this.renderer.setFramebuffer(this.raindropComposeTex);\r\n        this.renderer.clear(Color.black.transparent());\r\n        for (let i = 0; i < raindrops.length; i++)\r\n        {\r\n            const raindrop = raindrops[i];\r\n            const model = mat4.rts(quat.identity(), raindrop.pos.toVec3(), raindrop.size.toVec3(1));\r\n            this.raindropBuffer[i].modelMatrix.set(model);\r\n            this.raindropBuffer[i].size[0] = raindrop.size.x / 100;\r\n        }\r\n        this.raindropBuffer.markDirty();\r\n        switch (this.options.raindropCompose)\r\n        {\r\n            case \"smoother\":\r\n                this.matrlRaindrop.setPipelineStateOverride({\r\n                    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor]\r\n                });\r\n                this.matrlDroplet.setPipelineStateOverride({\r\n                    blendRGB: [Blending.OneMinusDstColor, Blending.OneMinusSrcColor],\r\n                });\r\n                break;\r\n            case \"harder\":\r\n                this.matrlRaindrop.setPipelineStateOverride({\r\n                    blendRGB: [Blending.One, Blending.OneMinusSrcAlpha]\r\n                });\r\n                this.matrlDroplet.setPipelineStateOverride({\r\n                    blendRGB: [Blending.One, Blending.OneMinusSrcAlpha],\r\n                });\r\n                break;\r\n        }\r\n        this.renderer.drawMeshInstance(this.mesh, this.raindropBuffer, this.matrlRaindrop, raindrops.length);\r\n        this.matrlErase.eraserSize = vec2(...this.options.raindropEraserSize);\r\n        this.renderer.blit(this.raindropComposeTex, this.dropletTexture, this.matrlErase);\r\n        if (this.options.mist)\r\n            this.renderer.blit(this.raindropComposeTex, this.mistTexture, this.matrlErase);\r\n    }\r\n\r\n    private drawDroplet(time: Time)\r\n    {\r\n        this.renderer.setFramebuffer(this.dropletTexture);\r\n        const count = this.options.dropletsPerSeconds * time.dt;\r\n        this.matrlDroplet.spawnRect = vec4(0, 0, this.options.width, this.options.height);\r\n        this.matrlDroplet.sizeRange = vec2(...this.options.dropletSize);\r\n        this.matrlDroplet.seed = randomRange(0, 133);\r\n        this.renderer.drawMeshProceduralInstance(this.mesh, this.matrlDroplet, count);\r\n    }\r\n}", "export interface Time\r\n{\r\n    dt: number,\r\n    total: number,\r\n}\r\n\r\nexport function clamp(x: number, l: number, h: number)\r\n{\r\n    return Math.min(Math.max(x, l), h);\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number)\r\n{\r\n    return a + (b - a) * t;\r\n}", "import { div, mul, plus, vec2, Vector2 } from \"zogra-renderer\";\r\nimport { random, randomRange } from \"./random\";\r\nimport { CollisionGrid, RaindropSimulator } from \"./simulator\";\r\nimport { lerp, Time } from \"./utils\";\r\n\r\nexport class RainDrop\r\n{\r\n    pos: vec2;\r\n    density: number = 1;\r\n    velocity: vec2 = vec2.zero();\r\n    spread: vec2;\r\n    destroied = false;\r\n    parent?: RainDrop;\r\n    grid?: CollisionGrid;\r\n    gridIdx?: number;\r\n\r\n    private _mass: number = 0;\r\n    private _size: vec2 = vec2.zero();\r\n    private simulator: RaindropSimulator;\r\n    private resistance = 0;\r\n    private shifting = 0;\r\n    private lastTrailPos: vec2;\r\n    private nextTrailDistance: number;\r\n\r\n    private nextRandomTime = 0;\r\n\r\n    constructor(simulator: RaindropSimulator, pos: vec2, size: number, density = 1)\r\n    {\r\n        this.pos = pos;\r\n        this.simulator = simulator;\r\n        this.density = density;\r\n\r\n        this.lastTrailPos = pos.clone();\r\n        this.nextTrailDistance = randomRange(...simulator.options.trailDistance);\r\n\r\n        this.spread = vec2(simulator.options.initialSpread);\r\n\r\n        this.mass = (size * density) ** 2;\r\n    }\r\n\r\n    get mass() { return this._mass; }\r\n    set mass(m: number)\r\n    {\r\n        this._mass = m;\r\n        const sqrtM = Math.sqrt(m) / this.density;\r\n        this._size.x = (this.spread.x + 1) * sqrtM;\r\n        this._size.y = (this.spread.y + 1) * sqrtM;\r\n        // this._size = mul(plus(this.spread, vec2.one()), Math.sqrt(m));\r\n    }\r\n    \r\n    get size(): vec2\r\n    {\r\n        return this._size;\r\n    }\r\n\r\n    get mergeDistance()\r\n    {\r\n        return this.size.x * (1 + this.spread.x) * 0.16 * this.simulator.options.colliderSize;\r\n    }\r\n\r\n    get options() { return this.simulator.options }\r\n\r\n    updateRaindrop(time: Time)\r\n    {\r\n        if (this.nextRandomTime <= time.total)\r\n        {\r\n            this.nextRandomTime = time.total + randomRange(...this.simulator.options.motionInterval)\r\n            this.randomMotion();\r\n        }\r\n\r\n        this.mass -= this.simulator.options.evaporate * time.dt;\r\n        const force = this.options.gravity * this.mass - this.resistance;\r\n        const acceleration = force / this.mass;\r\n        this.velocity.y -= acceleration * time.dt;\r\n        if (this.velocity.y > 0)\r\n            this.velocity.y = 0;\r\n        this.velocity.x = Math.abs(this.velocity.y) * this.shifting;\r\n        this.pos.x += this.velocity.x * time.dt;\r\n        this.pos.y += this.velocity.y * time.dt;\r\n        // this.pos.plus(mul(this.velocity, vec2(time.dt)));\r\n\r\n        const spreadByVelocity = this.simulator.options.velocitySpread * 2 * Math.atan(Math.abs(this.velocity.y * 0.005)) / Math.PI;\r\n        this.spread.y = Math.max(this.spread.y, spreadByVelocity);\r\n        this.spread.x *= Math.pow(this.simulator.options.shrinkRate, time.dt);\r\n        this.spread.y *= Math.pow(this.simulator.options.shrinkRate, time.dt);\r\n        // this.spread.y +=  Math.abs(this.velocity.y) * 0.0001;\r\n\r\n        if (Vector2.distanceSquared(this.lastTrailPos, this.pos) > this.nextTrailDistance * this.nextTrailDistance)\r\n        {\r\n            this.split();\r\n        }\r\n    }\r\n\r\n    split()\r\n    {\r\n        // return;\r\n        if (this.mass < 1000)\r\n            return;\r\n        let size = this.size.x * randomRange(...this.simulator.options.trailDropSize);\r\n        const pos = plus(vec2(randomRange(-5, 5), this.size.y / 4), this.pos);\r\n        let trailDrop = this.simulator.spawner.spawn(pos.clone(), size, this.simulator.options.trailDropDensity);\r\n        trailDrop.spread = vec2(0.1, Math.abs(this.velocity.y) * 0.01 * this.options.trailSpread);\r\n        trailDrop.parent = this;\r\n        this.mass -= trailDrop.mass;\r\n        this.simulator.add(trailDrop);\r\n        this.lastTrailPos = this.pos.clone();\r\n        this.nextTrailDistance = randomRange(...this.simulator.options.trailDistance);\r\n    }\r\n\r\n    randomMotion()\r\n    {\r\n        const maxResistance = lerp(...this.simulator.options.spawnSize, 1 - this.simulator.options.slipRate) ** 2 * 4;\r\n        this.resistance = randomRange(0, 1) * this.options.gravity * maxResistance;\r\n        this.shifting = random() * randomRange(...this.simulator.options.xShifting);\r\n    }\r\n\r\n    merge(target: RainDrop)\r\n    {\r\n        const selfMomentum = mul(this.velocity, this.mass);\r\n        const targetMomentum = mul(target.velocity, target.mass);\r\n        const momentum = plus(selfMomentum, targetMomentum);\r\n        this.mass += target.mass;\r\n        this.velocity = div(momentum, this.mass);\r\n    }\r\n}", "import { Rect, vec2 } from \"zogra-renderer\";\r\nimport { RainDrop } from \"./raindrop\";\r\nimport { randomJittered, JitterOption, randomInRect, randomRange } from \"./random\";\r\nimport { RaindropSimulator, SimulatorOptions } from \"./simulator\";\r\n\r\nexport class Spawner\r\n{\r\n\r\n\r\n    currentTime = 0;\r\n    nextSpawn = 0;\r\n\r\n    private simulator: RaindropSimulator;\r\n\r\n    constructor(simulator: RaindropSimulator, options: SimulatorOptions)\r\n    {\r\n\r\n        this.simulator = simulator;\r\n    }\r\n    \r\n    get interval() { return this.simulator.options.spawnInterval }\r\n    get size() { return this.simulator.options.spawnSize }\r\n    get spawnRect() { return this.simulator.options.viewport }\r\n\r\n    update(dt: number): this\r\n    {\r\n        this.currentTime += dt;\r\n        return this;\r\n    }\r\n    *trySpawn(): Iterable<RainDrop>\r\n    {\r\n        while (this.currentTime >= this.nextSpawn)\r\n        {\r\n            const size = randomRange(...this.size);\r\n            const pos = randomInRect(this.spawnRect);\r\n            this.nextSpawn += randomRange(...this.interval);\r\n            yield new RainDrop(this.simulator, pos, size);\r\n        }\r\n        if (this.currentTime >= this.nextSpawn)\r\n        {\r\n\r\n        }\r\n        return undefined;\r\n    }\r\n    spawn(pos: vec2, size: number, density = 1)\r\n    {\r\n        return new RainDrop(this.simulator, pos, size, density);\r\n    }\r\n}", "import { minus, Rect, vec2 } from \"zogra-renderer\";\r\nimport { RainDrop } from \"./raindrop\";\r\nimport { JitterOption } from \"./random\";\r\nimport { Spawner } from \"./spawner\";\r\nimport { Time } from \"./utils\";\r\n\r\nexport interface SimulatorOptions\r\n{\r\n    viewport: Rect;\r\n    /**\r\n     * Time range between two raindrop spwan.\r\n     */\r\n    spawnInterval: [number, number];\r\n    /**\r\n     * Random size range when spawn a new raindrop\r\n     */\r\n    spawnSize: [number, number];\r\n    /**\r\n     * Maximal amount of spawned raindrops.\r\n     * Recommend less than 2000\r\n     */\r\n    spawnLimit: number;\r\n    /**\r\n     * Recommend in range (0..1), other value should be ok.\r\n     */\r\n    slipRate: number;\r\n    /**\r\n     * Describe how often a raindrop change its motion state\r\n     */\r\n    motionInterval: [number, number];\r\n    /**\r\n     * Random velociy x relative to velocity y. Recommend in range (0..0.1)\r\n     */\r\n    xShifting: [number, number];\r\n    /**\r\n     * Relative size for collision check. Recommend in range (0.6..1.2)\r\n     */\r\n    colliderSize: number;\r\n    /**\r\n     * Mass density of the slipping trail raindrop. \r\n     * Recommend in range (0.1..0.3)\r\n     * \r\n     * A large value cause a raindrop quickly lose its size during slipping.\r\n     */\r\n    trailDropDensity: number;\r\n    /**\r\n     * Random size range of slipping trail drop. Recommend in range (0.3..0.5)\r\n     */\r\n    trailDropSize: [number, number];\r\n    /**\r\n     * Random distance range between two slipping trail drop. Recommend in range (20..40)\r\n     */\r\n    trailDistance: [number, number];\r\n    /**\r\n     * Vertical spread of a new spawned slipping trail drop. Recommend in range (0.4..0.6)\r\n     */\r\n    trailSpread: number\r\n    /**\r\n     * Spread rate when a new spawned raindrop hit the screen. Recommend in range (0.4..0.7)\r\n     */\r\n    initialSpread: number;\r\n    /**\r\n     * Spread shrink rate per seconds. Recommend in range (0.01..0.02)\r\n     */\r\n    shrinkRate: number;\r\n    /**\r\n     * Spread rate by velocity Y. Recommend in range (0.2..0.4)\r\n     * \r\n     * Raindrop with higher fall speed looks more narrow.\r\n     */\r\n    velocitySpread: number;\r\n    /**\r\n     * Mass lose per second. Recommend in range (10..30)\r\n     */\r\n    evaporate: number;\r\n    /**\r\n     * Gravity acceleration in pixels/s. Recommend 2400\r\n     */\r\n    gravity: number;\r\n}\r\n\r\nexport class CollisionGrid extends Array<RainDrop>\r\n{\r\n    /**@deprecated */\r\n    push(...item :RainDrop[])\r\n    {\r\n        return super.push(...item);\r\n    }\r\n    add(raindrop: RainDrop)\r\n    {\r\n        const len = super.push(raindrop);\r\n        raindrop.gridIdx = len - 1;\r\n        raindrop.grid = this;\r\n    }\r\n    delete(raindrop: RainDrop)\r\n    {\r\n        this[raindrop.gridIdx as number] = this[this.length - 1];\r\n        this[raindrop.gridIdx as number].gridIdx = raindrop.gridIdx;\r\n        this.length--;\r\n        raindrop.gridIdx = -1;\r\n        raindrop.grid = undefined;\r\n    }\r\n}\r\n\r\nexport class RaindropSimulator\r\n{\r\n    options: SimulatorOptions;\r\n    spawner: Spawner;\r\n    raindrops: RainDrop[] = [];\r\n    grid: CollisionGrid[] = [];\r\n    constructor(options: SimulatorOptions)\r\n    {\r\n        this.options = options;\r\n\r\n        this.spawner = new Spawner(this, options);\r\n\r\n        this.resize();\r\n    }\r\n    get gridSize() { return this.options.spawnSize[1] * 0.3 } // max collide distance\r\n\r\n    resize()\r\n    {\r\n        const w = Math.ceil(this.options.viewport.size.x / this.gridSize);\r\n        const h = Math.ceil(this.options.viewport.size.y / this.gridSize);\r\n        let base = 0;\r\n        if (this.grid.length < w * h)\r\n        {\r\n            base = this.grid.length;\r\n            this.grid.length = w * h;\r\n        }\r\n        for (let i = base; i < this.grid.length; i++)\r\n            this.grid[i] = new CollisionGrid();\r\n    }\r\n    gridAt(gridX: number, gridY: number)\r\n    {\r\n        if (gridX < 0 || gridY < 0)\r\n            return undefined;\r\n        const gridWidth = Math.ceil((this.options.viewport.xMax - this.options.viewport.xMin) / this.gridSize);\r\n        const idx = gridY * gridWidth + gridX;\r\n        if (idx >= this.grid.length)\r\n            return undefined;\r\n        return this.grid[idx];\r\n    }\r\n    gridAtWorldPos(x: number, y: number)\r\n    {\r\n        return this.gridAt(...this.worldToGrid(x, y));\r\n    }\r\n    worldToGrid(x: number, y: number): [number, number]\r\n    {\r\n        const gridX = Math.floor(x / this.gridSize);\r\n        const gridY = Math.floor(y / this.gridSize);\r\n        return [gridX, gridY];\r\n    }\r\n    add(raindrop: RainDrop)\r\n    {\r\n\r\n        this.raindrops.push(raindrop);\r\n        let grid = this.gridAtWorldPos(raindrop.pos.x, raindrop.pos.y);\r\n        if (grid)\r\n        {\r\n            grid.add(raindrop);\r\n            raindrop.gridIdx = grid.length - 1;\r\n        }\r\n    }\r\n\r\n    update(time: Time)\r\n    {\r\n        if (this.raindrops.length <= this.options.spawnLimit)\r\n        {\r\n            for (const newDrop of this.spawner.update(time.dt).trySpawn())\r\n            {\r\n                this.raindrops.push(newDrop); \r\n            }\r\n        }\r\n\r\n        this.raindropUpdate(time);\r\n        this.collisionUpdate();\r\n\r\n        for (let i = 0; i < this.raindrops.length; i++)\r\n        {\r\n            if (this.raindrops[i].destroied)\r\n            {\r\n                this.raindrops[i].grid?.delete(this.raindrops[i]);\r\n                this.raindrops[i] = this.raindrops[this.raindrops.length - 1];\r\n                this.raindrops.length--;\r\n            }\r\n        }\r\n    }\r\n\r\n    raindropUpdate(time: Time)\r\n    {\r\n        for (let i = 0; i < this.raindrops.length; i++)\r\n        {\r\n            const raindrop = this.raindrops[i];\r\n            if (raindrop.destroied)\r\n                continue;\r\n            \r\n            raindrop.updateRaindrop(time);\r\n            if (raindrop.pos.y < -100)\r\n                raindrop.destroied = true;\r\n            \r\n\r\n            if (raindrop.destroied)\r\n                continue;\r\n\r\n\r\n            const [gridX, gridY] = this.worldToGrid(raindrop.pos.x, raindrop.pos.y);\r\n            const grid = this.gridAt(gridX, gridY);\r\n            if (grid !== raindrop.grid)\r\n            {\r\n                raindrop.grid?.delete(raindrop);\r\n                grid?.add(raindrop);\r\n                raindrop.grid = grid;\r\n            }\r\n        }\r\n    }\r\n\r\n    collisionUpdate()\r\n    {\r\n        for (let i = 0; i < this.raindrops.length; i++)\r\n        {\r\n            const raindrop = this.raindrops[i];\r\n\r\n            if (raindrop.destroied)\r\n                continue;\r\n            \r\n            const [gridX, gridY] = this.worldToGrid(raindrop.pos.x, raindrop.pos.y);\r\n\r\n            for (let x = -1; x <= 1; x++)\r\n            {\r\n                for (let y = -1; y <= 1; y++)\r\n                {\r\n                    const grid = this.gridAt(gridX + x, gridY + y);\r\n                    if (!grid)\r\n                        continue;\r\n\r\n                    for (const other of grid)\r\n                    {\r\n                        const isSame = other === raindrop;\r\n                        const isParent = other.parent === raindrop || raindrop.parent === other;\r\n                        const isAdjacent = raindrop.parent && (raindrop.parent === other.parent);\r\n                        if (other.destroied || isParent || isAdjacent || isSame)\r\n                            continue;\r\n\r\n                        let dx = raindrop.pos.x - other.pos.x;\r\n                        let dy = raindrop.pos.y - other.pos.y;\r\n                        let distance = Math.sqrt(dx * dx + dy * dy);\r\n                        if (distance - raindrop.mergeDistance - other.mergeDistance < 0)\r\n                        {\r\n                            if (raindrop.mass >= other.mass)\r\n                            {\r\n                                raindrop.merge(other);\r\n                                other.destroied = true;\r\n                            }\r\n                            else\r\n                            {\r\n                                other.merge(raindrop);\r\n                                raindrop.destroied = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
